# # .github/workflows/template-validation.yml
# name: Template Validation

# on:
#   push:
#     paths:
#       - "templates/**"
#       - "tools/template-validator/**"
#   pull_request:
#     paths:
#       - "templates/**"
#       - "tools/template-validator/**"
#   schedule:
#     - cron: "0 6 * * *" # Daily at 6 AM

# jobs:
#   validate-templates:
#     runs-on: ubuntu-latest

#     services:
#       mongodb:
#         image: mongo:7
#         ports:
#           - 27017:27017
#         options: >-
#           --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#       ollama:
#         image: ollama/ollama:latest
#         ports:
#           - 11434:11434
#         options: >-
#           --health-cmd "curl -f http://localhost:11434/api/tags || exit 1"
#           --health-interval 30s
#           --health-timeout 10s
#           --health-retries 5

#     strategy:
#       matrix:
#         template: ["basic", "ai-chat", "ai-dashboard"]
#         node-version: [18, 20]
#       fail-fast: false

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: ${{ matrix.node-version }}

#       - name: Setup Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: "3.11"

#       - name: Setup pnpm
#         uses: pnpm/action-setup@v2
#         with:
#           version: 8

#       - name: Install dependencies
#         run: |
#           pnpm install
#           pip install -r tools/template-validator/requirements.txt

#       - name: Wait for services
#         run: |
#           # Wait for MongoDB
#           timeout 60 bash -c 'until mongosh --eval "db.adminCommand(\"ping\")" --quiet; do sleep 2; done'

#           # Wait for Ollama
#           timeout 300 bash -c 'until curl -f http://localhost:11434/api/tags; do sleep 5; done'

#       - name: Setup Ollama models
#         run: |
#           # Pull required models
#           curl -X POST http://localhost:11434/api/pull \
#             -H "Content-Type: application/json" \
#             -d '{"name": "llama3.1:8b"}' &

#           # Wait for model pull to complete (with timeout)
#           timeout 600 bash -c 'while ! curl -s http://localhost:11434/api/tags | grep -q "llama3.1:8b"; do sleep 10; done'

#       - name: Build FARM CLI and dependencies
#         run: |
#           pnpm build
#           # Build template validator if it exists
#           if [ -d "tools/template-validator" ]; then
#             cd tools/template-validator && pnpm build && cd ../..
#           fi

#       - name: Validate templates
#         env:
#           OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
#           MONGODB_URL: mongodb://localhost:27017
#           OLLAMA_URL: http://localhost:11434
#         run: |
#           # Create temp directory if it doesn't exist
#           mkdir -p .temp-validation

#           node tools/template-validator/dist/cli.js validate \
#             --template ${{ matrix.template }} || echo "Validation failed for ${{ matrix.template }}"

#       - name: Upload validation results
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: validation-results-${{ matrix.template }}-node${{ matrix.node-version }}
#           path: .temp-validation/results.json

#   performance-benchmarks:
#     runs-on: ubuntu-latest
#     needs: validate-templates
#     if: always() # Run even if some validations fail

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: "20"

#       - name: Setup pnpm
#         uses: pnpm/action-setup@v2
#         with:
#           version: 8

#       - name: Install dependencies
#         run: pnpm install

#       - name: Make script executable
#         run: chmod +x ./scripts/s-build.sh

#       - name: Build CLI
#         run: ./scripts/s-build.sh

#       - name: Run performance benchmarks
#         run: |
#           node tools/template-validator/dist/cli.js benchmark \
#             --output benchmarks.json || echo "Benchmarks failed"

#       - name: Upload benchmarks
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: performance-benchmarks
#           path: benchmarks.json

#       - name: Debug environment
#         run: |
#           echo "Node version: $(node --version)"
#           echo "pnpm version: $(pnpm --version)"
#           echo "Available scripts:"
#           cat package.json | grep -A 10 '"scripts"'
