# templates/ai-chat/apps/api/Dockerfile.hbs # Multi-stage Docker build for
{{name}}
API # Build stage FROM python:3.11-slim as builder # Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \ PYTHONUNBUFFERED=1 \ PIP_NO_CACHE_DIR=1 \
PIP_DISABLE_PIP_VERSION_CHECK=1 # Install system dependencies RUN apt-get update
&& apt-get install -y \ build-essential \ curl \ && rm -rf /var/lib/apt/lists/*
# Create and activate virtual environment RUN python -m venv /opt/venv ENV
PATH="/opt/venv/bin:$PATH" # Copy requirements and install Python dependencies
COPY requirements.txt . RUN pip install --upgrade pip && \ pip install -r
requirements.txt # Production stage FROM python:3.11-slim as production # Set
environment variables ENV PYTHONDONTWRITEBYTECODE=1 \ PYTHONUNBUFFERED=1 \
PATH="/opt/venv/bin:$PATH" \ ENVIRONMENT=production # Install runtime
dependencies RUN apt-get update && apt-get install -y \ curl \ && rm -rf
/var/lib/apt/lists/* \ && groupadd -r apiuser \ && useradd -r -g apiuser apiuser
# Copy virtual environment from builder COPY --from=builder /opt/venv /opt/venv
# Create app directory WORKDIR /app # Copy application code COPY . . # Create
necessary directories RUN mkdir -p /var/log/{{name}}
&& \ chown -R apiuser:apiuser /app /var/log/{{name}}

# Switch to non-root user USER apiuser # Health check HEALTHCHECK --interval=30s
--timeout=30s --start-period=5s --retries=3 \ CMD curl -f
http://localhost:8000/health || exit 1 # Expose port EXPOSE 8000 # Default
command CMD ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000",
"--workers", "4"] # Development stage FROM python:3.11-slim as development # Set
environment variables ENV PYTHONDONTWRITEBYTECODE=1 \ PYTHONUNBUFFERED=1 \
ENVIRONMENT=development # Install system dependencies including development
tools RUN apt-get update && apt-get install -y \ build-essential \ curl \ git \
&& rm -rf /var/lib/apt/lists/* # Create app directory WORKDIR /app # Copy
requirements and install dependencies COPY requirements.txt . RUN pip install
--upgrade pip && \ pip install -r requirements.txt && \ pip install watchfiles #
For hot reload # Copy application code COPY . . # Expose port EXPOSE 8000 #
Development command with hot reload CMD ["uvicorn", "src.main:app", "--host",
"0.0.0.0", "--port", "8000", "--reload"]