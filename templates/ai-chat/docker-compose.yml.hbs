version: '3.9' services: # MongoDB Database mongodb: image: mongo:7.0
container_name:
{{name}}-mongodb restart: unless-stopped ports: - "27017:27017" environment:
MONGO_INITDB_DATABASE:
{{name}}
MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER:-} MONGO_INITDB_ROOT_PASSWORD:
${MONGODB_PASSWORD:-} volumes: - mongodb_data:/data/db -
mongodb_config:/data/configdb networks: -
{{name}}-network # Ollama for Local AI ollama: image: ollama/ollama:latest
container_name:
{{name}}-ollama restart: unless-stopped ports: - "11434:11434" volumes: -
ollama_data:/root/.ollama environment: - OLLAMA_KEEP_ALIVE=24h -
OLLAMA_HOST=0.0.0.0 deploy: resources: reservations: devices: - driver: nvidia
count: all capabilities: [gpu] networks: -
{{name}}-network # Redis for caching (optional) redis: image: redis:7-alpine
container_name:
{{name}}-redis restart: unless-stopped ports: - "6379:6379" volumes: -
redis_data:/data networks: -
{{name}}-network # Nginx reverse proxy (production) nginx: image: nginx:alpine
container_name:
{{name}}-nginx restart: unless-stopped ports: - "80:80" - "443:443" volumes: -
./nginx.conf:/etc/nginx/nginx.conf:ro - ./apps/web/dist:/usr/share/nginx/html:ro
depends_on: - api networks: -
{{name}}-network profiles: - production # API service (production) api: build:
context: ./apps/api dockerfile: Dockerfile container_name:
{{name}}-api restart: unless-stopped ports: - "8000:8000" environment: -
DATABASE_URL=mongodb://mongodb:27017/{{name}}
- OLLAMA_URL=http://ollama:11434 - REDIS_URL=redis://redis:6379 depends_on: -
mongodb - ollama - redis volumes: - ./apps/api:/app networks: -
{{name}}-network profiles: - production volumes: mongodb_data: mongodb_config:
ollama_data: redis_data: networks:
{{name}}-network: driver: bridge