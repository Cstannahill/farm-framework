""" Health check endpoints Basic health monitoring for
{{projectName}}
""" from fastapi import APIRouter, HTTPException
{{#if_database "mongodb"}}
  from src.database.connection import get_database
{{else}}
  from sqlalchemy import text from src.database.connection import get_database
{{/if_database}}

router = APIRouter() @router.get("/health") async def health_check(): """Basic
health check endpoint.""" return { "status": "healthy", "service": "{{projectName}}-api",
"version": "0.1.0" } @router.get("/health/detailed") async def
detailed_health_check(): """Detailed health check with database status."""
health_status = { "status": "healthy", "service": "{{projectName}}-api",
"version": "0.1.0", "checks": {} } # Database health check try:
{{#if_database "mongodb"}}
  db = await get_database() await db.command("ping")
  health_status["checks"]["database"] = {"status": "healthy", "type": "{{database}}"}
{{else}}
  async for session in get_database(): await session.execute(text("SELECT 1"))
  health_status["checks"]["database"] = {"status": "healthy", "type": "{{database}}"}
  break
{{/if_database}}
except Exception as e: health_status["checks"]["database"] = { "status":
"unhealthy", "error": str(e), "type": "{{database}}" } health_status["status"] =
"degraded" return health_status