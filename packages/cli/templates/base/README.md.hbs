# {{projectName}}

{{description}}

A full-stack application built with the **FARM Stack Framework**.

## Tech Stack

- **F**astAPI - Modern Python web framework
{{#if_feature "ai"}}
- **A**I/ML - Ollama (local) + OpenAI (cloud) integration
{{else}}
- **A**I/ML - Ready for AI integration
{{/if_feature}}
{{#unless (eq template "api-only")}}
- **R**eact - Frontend with TypeScript and Vite
{{/unless}}
- **M**ongoDB - Document database with ODM

## Getting Started

### Prerequisites

- Node.js 18+ and npm
- Python 3.11+
{{#if docker}}
- Docker and Docker Compose
{{/if}}
{{#if_feature "ai"}}
- Docker (for Ollama AI service)
{{/if_feature}}

### Installation

1. **Install dependencies:**
   ```bash
   cd {{projectName}}
   npm install
   cd apps/api && pip install -r requirements.txt
   ```

{{#if docker}}
2. **Start development environment:**
   ```bash
   npm run docker:up
   ```
{{/if}}

{{#unless (eq template "api-only")}}
3. **Start development servers:**
   ```bash
   npm run dev        # Start both frontend and backend
   # OR
   npm run dev:frontend   # Frontend only (http://localhost:3000)
   npm run dev:backend    # Backend only (http://localhost:8000)
   ```
{{else}}
3. **Start development server:**
   ```bash
   npm run dev:backend    # Start FastAPI server (http://localhost:8000)
   ```
{{/unless}}

## Features

{{#each features}}
- ‚úÖ **{{this}}** - {{#switch this}}{{#case "auth"}}Authentication and user management{{/case}}{{#case "ai"}}AI/ML integration with Ollama and cloud providers{{/case}}{{#case "realtime"}}Real-time features with WebSocket support{{/case}}{{#case "payments"}}Payment processing integration{{/case}}{{#case "email"}}Email service integration{{/case}}{{#case "storage"}}File upload and storage{{/case}}{{#case "search"}}Full-text search capabilities{{/case}}{{#case "analytics"}}Analytics and monitoring{{/case}}{{#default}}{{this}} feature{{/default}}{{/switch}}
{{/each}}

{{#if_feature "ai"}}
## AI Development

This project includes **Ollama** for local AI development:

- ü§ñ **Zero-cost development** - No API keys required for local work
- üîÑ **Seamless deployment** - Automatic switch to OpenAI in production
- üì¶ **Auto-model management** - Models downloaded and cached automatically
- üöÄ **Hot model swapping** - Update models without service restart

### AI API Endpoints

- `POST /api/ai/chat` - Chat completion
- `POST /api/ai/chat/stream` - Streaming chat (real-time)
- `GET /api/ai/models` - List available models
- `GET /api/ai/health` - Check AI provider status

{{/if_feature}}

## Available Scripts

- `npm run dev` - Start development server(s)
- `npm run build` - Build for production
- `npm run start` - Start production server
- `npm run test` - Run tests
- `npm run lint` - Lint code
- `npm run type-check` - Type checking
- `npm run generate` - Generate types and API clients

## API Documentation

Visit [http://localhost:8000/docs](http://localhost:8000/docs) for interactive API documentation.

---

Built with ‚ù§Ô∏è using [FARM Stack Framework](https://github.com/your-org/farm-framework)